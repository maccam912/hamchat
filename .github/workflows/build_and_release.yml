name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --release
      - name: Rename binary
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv target/release/hamchat.exe target/release/hamchat-${{ matrix.os }}.exe
          else
            mv target/release/hamchat target/release/hamchat-${{ matrix.os }}
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hamchat-${{ matrix.os }}
          path: target/release/hamchat-${{ matrix.os }}

  create_release:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/hamchat-ubuntu-latest
          asset_name: hamchat-ubuntu-latest
          asset_content_type: application/octet-stream
      - name: Upload Release Asset macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/hamchat-macos-latest
          asset_name: hamchat-macos-latest
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/hamchat-windows-latest.exe
          asset_name: hamchat-windows-latest.exe
          asset_content_type: application/octet-stream